From 5e2e90661cada2491eb056d7d7c476b7e53c932e Mon Sep 17 00:00:00 2001
From: Colin Xu <colin.xu@intel.com>
Date: Fri, 31 Jul 2020 15:17:52 +0800
Subject: [PATCH] I2C pass through WA: LPSS_PRIV_CAPS returns 0xffffffff after
 D3->D0.

This is a temporary workaround for I2C can't read correct value at BAR0
offset LPSS_PRIV_CAPS after D3->D0, which prevent I2C driver from probe.

Change-Id: I5cce8c65c04365cb3b62c6c9d0f735a5fbebceba
Tracked-On: OAM-92295
Signed-off-by: Colin Xu <colin.xu@intel.com>

diff --git a/drivers/mfd/intel-lpss-pci.c b/drivers/mfd/intel-lpss-pci.c
index 41ab3a6e5dba..4779b841a3f0 100644
--- a/drivers/mfd/intel-lpss-pci.c
+++ b/drivers/mfd/intel-lpss-pci.c
@@ -46,7 +46,7 @@ static int intel_lpss_pci_probe(struct pci_dev *pdev,
 		return ret;

 	pm_runtime_put(&pdev->dev);
-	pm_runtime_allow(&pdev->dev);
+	pm_runtime_forbid(&pdev->dev);

 	return 0;
 }
diff --git a/drivers/mfd/intel-lpss.c b/drivers/mfd/intel-lpss.c
index b0f0781a6b9c..343785704c7b 100644
--- a/drivers/mfd/intel-lpss.c
+++ b/drivers/mfd/intel-lpss.c
@@ -430,7 +430,7 @@ int intel_lpss_probe(struct device *dev,
 	if (ret)
 		goto err_remove_ltr;

-	dev_pm_set_driver_flags(dev, DPM_FLAG_SMART_SUSPEND);
+	//dev_pm_set_driver_flags(dev, DPM_FLAG_SMART_SUSPEND);

 	return 0;

@@ -460,6 +460,7 @@ EXPORT_SYMBOL_GPL(intel_lpss_remove);

 static int resume_lpss_device(struct device *dev, void *data)
 {
+    return 0;
 	if (!dev_pm_test_driver_flags(dev, DPM_FLAG_SMART_SUSPEND))
 		pm_runtime_resume(dev);

@@ -482,6 +483,8 @@ int intel_lpss_suspend(struct device *dev)
 	struct intel_lpss *lpss = dev_get_drvdata(dev);
 	unsigned int i;

+    return 0;
+
 	/* Save device context */
 	for (i = 0; i < LPSS_PRIV_REG_COUNT; i++)
 		lpss->priv_ctx[i] = readl(lpss->priv + i * 4);
@@ -503,6 +506,8 @@ int intel_lpss_resume(struct device *dev)
 	struct intel_lpss *lpss = dev_get_drvdata(dev);
 	unsigned int i;

+    return 0;
+
 	intel_lpss_deassert_reset(lpss);

 	/* Restore device context */
--
2.28.0
