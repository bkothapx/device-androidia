From 8529ee8bd82dba26684d0aedd4659ef9d186705e Mon Sep 17 00:00:00 2001
From: Colin Xu <colin.xu@intel.com>
Date: Fri, 4 Sep 2020 09:38:27 +0800
Subject: [PATCH] Add SKU-specific configurations for QEMU to release tar ball

Change-Id: I6106e38168c189f95c0140c6c17532e15d5ceba0
Tracked-On: OAM-92721
Signed-off-by: Colin Xu <colin.xu@intel.com>
Signed-off-by: Swee Yee Fonn <swee.yee.fonn@intel.com>
---
 groups/device-specific/caas/BoardConfig.mk    |  2 +
 groups/device-specific/caas/files.spec        |  1 +
 groups/device-specific/caas/product.mk        |  2 +
 .../caas/skucfg/tasmania/ssdt.dsl             | 79 +++++++++++++++++++
 .../caas/skucfg/tasmania/virtio_gpio.map      |  4 +
 5 files changed, 88 insertions(+)
 create mode 100644 groups/device-specific/caas/skucfg/tasmania/ssdt.dsl
 create mode 100644 groups/device-specific/caas/skucfg/tasmania/virtio_gpio.map

diff --git a/groups/device-specific/caas/BoardConfig.mk b/groups/device-specific/caas/BoardConfig.mk
index c62a3f1..ed454fc 100644
--- a/groups/device-specific/caas/BoardConfig.mk
+++ b/groups/device-specific/caas/BoardConfig.mk
@@ -16,6 +16,8 @@ BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/start_flash_usb.sh
 BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/auto_switch_pt_usb_vms.sh
 BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/findall.py
 BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/setup_host.sh
+BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/skucfg/tasmania/ssdt.dsl
+BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/skucfg/tasmania/virtio_gpio.map
 BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/sof_audio/configure_sof.sh
 BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/sof_audio/blacklist-dsp.conf
 BOARD_FLASHFILES += $(PRODUCT_OUT)/scripts/setup_audio_host.sh
diff --git a/groups/device-specific/caas/files.spec b/groups/device-specific/caas/files.spec
index a17cde8..58249b9 100644
--- a/groups/device-specific/caas/files.spec
+++ b/groups/device-specific/caas/files.spec
@@ -15,6 +15,7 @@ start_android_qcow2.sh: "script for starting android in Qemu"
 setup_host.sh: "script for setting up virtulization environment on host"
 file_share.sh: "script for setting up file sharing environment on host"
 sof_audio: "script for sof audio"
+skucfg: "SKU-specific configurations for QEMU"
 auto_switch_pt_usb_vms.sh:"script for switching usb_vms"
 guest_pm_control:" Guest PM control"
 findall.py: "Find script"
diff --git a/groups/device-specific/caas/product.mk b/groups/device-specific/caas/product.mk
index 6149109..6d22257 100755
--- a/groups/device-specific/caas/product.mk
+++ b/groups/device-specific/caas/product.mk
@@ -42,6 +42,8 @@ PRODUCT_COPY_FILES += $(LOCAL_PATH)/sof_audio/blacklist-dsp.conf:$(PRODUCT_OUT)/
 PRODUCT_COPY_FILES += $(LOCAL_PATH)/guest_pm_control:$(PRODUCT_OUT)/scripts/guest_pm_control
 PRODUCT_COPY_FILES += $(LOCAL_PATH)/intel-thermal-conf.xml:$(PRODUCT_OUT)/scripts/intel-thermal-conf.xml
 PRODUCT_COPY_FILES += $(LOCAL_PATH)/thermald.service:$(PRODUCT_OUT)/scripts/thermald.service
+PRODUCT_COPY_FILES += $(LOCAL_PATH)/skucfg/tasmania/ssdt.dsl:$(PRODUCT_OUT)/scripts/skucfg/tasmania/ssdt.dsl
+PRODUCT_COPY_FILES += $(LOCAL_PATH)/skucfg/tasmania/virtio_gpio.map:$(PRODUCT_OUT)/scripts/skucfg/tasmania/virtio_gpio.map
 PRODUCT_COPY_FILES += device/intel/civ/host/vm-manager/scripts/start_civ.sh:$(PRODUCT_OUT)/scripts/start_civ.sh
 PRODUCT_COPY_FILES += device/intel/civ/host/vm-manager/scripts/setup_host.sh:$(PRODUCT_OUT)/scripts/setup_host.sh
 PRODUCT_COPY_FILES += device/intel/civ/host/vm-manager/scripts/guest_time_keeping.sh:$(PRODUCT_OUT)/scripts/guest_time_keeping.sh
diff --git a/groups/device-specific/caas/skucfg/tasmania/ssdt.dsl b/groups/device-specific/caas/skucfg/tasmania/ssdt.dsl
new file mode 100644
index 0000000..dbc0b1e
--- /dev/null
+++ b/groups/device-specific/caas/skucfg/tasmania/ssdt.dsl
@@ -0,0 +1,79 @@
+/* QEMU will only user data portion, all header information is specified in the command line */
+DefinitionBlock (
+    "ssdt.aml",
+    "SSDT",
+    0x00000001,
+    "INTEL",
+    "INTLSSDT",
+    0x00000001
+    )
+{
+    External (_SB_.PCI0, DeviceObj)
+    Scope (_SB.PCI0) {
+        Device (GPI0) {
+            Name (LINK, "\\_SB.PCI0.GPI0")
+            /* Match VirtoIO GPIO PCI in guest */
+            Name (_ADR, 0x00140000)
+            Name (_DDN, "VirtoIO GPIO Controller")
+            Name (_UID, "VirtoIO GPIO Controller 0")
+            /* Empty _CRS, VirtoIO GPIO FE will handle all PV resource */
+            Method (_CRS, 0, Serialized) {
+                Return (Buffer(Zero){})
+            }
+            Method (_STA, 0, NotSerialized) {
+                Return (0x0F)
+            }
+        }
+
+        Device (I2C1) {
+            Name (_ADR, 0x00150001)
+            Device (NFC1) {
+                Name (_ADR, Zero)  // _ADR: Address
+                Name (_HID, EisaId ("NXP1002"))  // _HID: Hardware ID
+                Name (_CID, "NXP1002")  // _CID: Compatible ID
+                Name (_DDN, "NXP NFC")  // _DDN: DOS Device Name
+                Name (_UID, One)  // _UID: Unique ID
+                Method (_STA, 0, NotSerialized) {
+                    Return (0x0F)
+                }
+                Method (_CRS, 0, Serialized) {
+                    Name (SBUF, ResourceTemplate () {
+                        I2cSerialBusV2 (0x0029, ControllerInitiated, 0x00061A80,
+                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
+                            0x00, ResourceConsumer, _Y55, Exclusive,
+                            )
+                        GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullDefault, 0x0000,
+                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
+                            )
+                            {
+                                0x0001
+                            }
+                        GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
+                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
+                            )
+                            {
+                                0x0002
+                            }
+                        GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
+                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
+                            )
+                            {
+                                0x0003
+                            }
+                    })
+                    CreateWordField (SBUF, \_SB.PCI0.I2C1.NFC1._CRS._Y55._ADR, NADR)
+                    CreateDWordField (SBUF, \_SB.PCI0.I2C1.NFC1._CRS._Y55._SPE, NSPD)
+                    //CreateWordField (SBUF, 0x38, NFCA)
+                    //CreateWordField (SBUF, 0x60, NFCB)
+                    //CreateWordField (SBUF, 0x88, NFCC)
+                    NADR = 0x29
+                    NSPD = 0x00061A80
+                    //NFCA = 0x0000
+                    //NFCB = 0x0001
+                    //NFCC = 0x0002
+                    Return (SBUF)
+                }
+            }
+        }
+    }
+}
diff --git a/groups/device-specific/caas/skucfg/tasmania/virtio_gpio.map b/groups/device-specific/caas/skucfg/tasmania/virtio_gpio.map
new file mode 100644
index 0000000..e5e56f8
--- /dev/null
+++ b/groups/device-specific/caas/skucfg/tasmania/virtio_gpio.map
@@ -0,0 +1,4 @@
+# devfn in guest, must match DSDT/SSDT
+0x14.0
+# pin mapping json for virtio-gpio-pci
+{"base":0,,"map":[{"chip":"gpiochip0",, "pin":0,,"bypass":true},,{"chip":"gpiochip0",, "pin":257},,{"chip":"gpiochip0",, "pin":192},,{"chip":"gpiochip0",, "pin":86}]}
\ No newline at end of file
--
2.17.1
