From 32934c18621c040be380ce8a003b60e38e365241 Mon Sep 17 00:00:00 2001
From: Zhuocheng Ding <zhuocheng.ding@intel.com>
Date: Fri, 11 Sep 2020 15:14:05 +0800
Subject: [PATCH] Replace guest_time_keeping.sh with QMP client utility

Now guest_time_keeping.sh just creates the QMP channel and passes
control to guest_rtc_monitor utility.

Change-Id: I41af724e430bd308ae8c4fe299698315633a58c3
Tracked-On: OAM-92870
Signed-off-by: Zhuocheng Ding <zhuocheng.ding@intel.com>
---
 scripts/guest_time_keeping.sh | 63 +++--------------------------------
 scripts/setup_host.sh         |  2 ++
 scripts/start_civ.sh          |  7 ++--
 3 files changed, 11 insertions(+), 61 deletions(-)

diff --git a/scripts/guest_time_keeping.sh b/scripts/guest_time_keeping.sh
index dcb48ac..a9bb9ae 100755
--- a/scripts/guest_time_keeping.sh
+++ b/scripts/guest_time_keeping.sh
@@ -11,6 +11,9 @@
 # QMP RTC_EVENT JSON Sample:
 # {"timestamp": {"seconds": 1585714481, "microseconds": 85991}, "event": "RTC_CHANGE", "data": {"offset": -1}}

+# QMP RTC_ALARM JSON Sample:
+# {"timestamp": {"seconds": 1593413313, "microseconds": 568267}, "event": "RTC_ALARM", "data": {"expire": 1593499713567502000}}
+
 # If guest time is set earlier than the image build time, the guest time will become the image build time after
 # reboot

@@ -18,6 +21,7 @@ set -eE

 #------------------------------------ Global Variables -----------------------------------------
 QMP_PIPE=$1
+RTC_MONITOR=$2

 #------------------------------------     Functions    -----------------------------------------
 function send_qmp_cmd() {
@@ -66,63 +70,6 @@ function connect_qmp_pipe() {
     fi
 }

-function update_host_date() {
-    local offset=$1
-
-    [[ $offset -eq 0 ]] && return
-
-    echo "Guest time changed"
-    local old_time=$(date)
-    date -s "$offset seconds"
-    local updated_time=$(date)
-
-    if [ $? = "0" ]; then
-        hwclock --systohc
-        echo "Host time is set from \"$old_time\" to \"$updated_time\""
-    else
-        echo "Fail to set host time"
-    fi
-}
-
-function monitor_guest_rtc_change() {
-    if [[ -z $1 ]]; then
-        echo "E: Empty QMP pipe"
-        return -1
-    fi
-
-    local qmp_pipe_out=$1".out"
-    if [[ ! -p $qmp_pipe_out ]]; then
-        echo "E: Not named pipe: $qmp_pipe_out"
-        return -1
-    fi
-
-    local pout
-    while true; do
-        if [ ! `pgrep qemu-system` ]; then
-            echo "E: Guest is not alive!"
-            return -1
-        fi
-
-        read pout < $qmp_pipe_out
-        local event=$(jq -r .event <<< "$pout")
-
-        case $event in
-            RTC_CHANGE)
-                local offset=$(jq -r .data.offset <<< "$pout")
-                update_host_date "$offset"
-                ;;
-            SHUTDOWN)
-                return
-                ;;
-            *)
-                continue
-                ;;
-        esac
-
-        sleep 1
-    done
-}
-
 function create_pipe() {
     [[ -z $1 ]] && return
     [[ -p $1".in" ]] || mkfifo $1".in"
@@ -132,4 +79,4 @@ function create_pipe() {
 #------------------------------------     Main process    -----------------------------------------
 create_pipe "$QMP_PIPE" || exit -1
 connect_qmp_pipe "$QMP_PIPE" || exit -1
-monitor_guest_rtc_change "$QMP_PIPE"
+exec "$RTC_MONITOR" "$QMP_PIPE.in" "$QMP_PIPE.out"
diff --git a/scripts/setup_host.sh b/scripts/setup_host.sh
index 200453e..68fc896 100755
--- a/scripts/setup_host.sh
+++ b/scripts/setup_host.sh
@@ -189,6 +189,8 @@ function prepare_required_scripts(){
     chmod +x $CIV_WORK_DIR/scripts/findall.py
     chmod +x $CIV_WORK_DIR/scripts/thermsys
     chmod +x $CIV_WORK_DIR/scripts/batsys
+    sudo chown root $CIV_WORK_DIR/scripts/guest_rtc_monitor
+    sudo chmod u+s $CIV_WORK_DIR/scripts/guest_rtc_monitor
 }

 function install_auto_start_service(){
diff --git a/scripts/start_civ.sh b/scripts/start_civ.sh
index 362efd9..109495f 100755
--- a/scripts/start_civ.sh
+++ b/scripts/start_civ.sh
@@ -658,9 +658,10 @@ function set_guest_pm() {

 function set_guest_time_keep() {
     local guest_time_keep_daemon=$SCRIPTS_DIR/guest_time_keeping.sh
-    if [ -f $guest_keep_daemon ]; then
+    local guest_time_keep_rtc_daemon=$SCRIPTS_DIR/guest_rtc_monitor
+    if [ -f $guest_keep_daemon ] && [ -f $guest_time_keep_rtc_daemon ]; then
         local guest_time_keep_pipe=$WORK_DIR/qmp-time-keep-pipe
-        $guest_time_keep_daemon "$guest_time_keep_pipe" &
+        $guest_time_keep_daemon "$guest_time_keep_pipe" "$guest_time_keep_rtc_daemon" &
         GUEST_TIME_KEEP="-qmp pipe:$guest_time_keep_pipe"
     fi
 }
@@ -788,7 +789,7 @@ function show_help() {
     printf "\t--thermal-mediation enable thermal mediation.\n"
     printf "\t--battery-mediation enable battery mediation.\n"
     printf "\t--guest-pm-control allow guest control host PM.\n"
-    printf "\t--guest-time-keep reflect guest time setting on Host OS.\n"
+    printf "\t--guest-time-keep reflect guest RTC settings on Host OS.\n"
     printf "\t--qmp-pipe specify the name of the pipe used for qmp communication.\n"
     printf "\t--allow-suspend option allow guest enter S3 state, by default guest cannot enter S3 state.\n"
     printf "\t--disable-kernel-irqchip set kernel_irqchip=off.\n"
--
2.17.1

