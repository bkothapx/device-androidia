From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tina Zhang <tina.zhang@intel.com>
Date: Fri, 12 Mar 2021 13:07:40 +0800
Subject: [PATCH] kmsro: Add iris renderonly support

Enable using iris for KMS renderonly.

v2: let kmsro_drm_screen_create() be invoked by kmsro driver.

Signed-off-by: Tina Zhang <tina.zhang@intel.com>
---
 meson.build                                       |  2 +-
 src/gallium/auxiliary/target-helpers/drm_helper.h |  2 ++
 src/gallium/winsys/kmsro/drm/kmsro_drm_winsys.c   | 13 +++++++++++++
 src/gallium/winsys/kmsro/drm/meson.build          |  3 +++
 4 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/meson.build b/meson.build
index e1e94e71049..2b0f4dfdd57 100644
--- a/meson.build
+++ b/meson.build
@@ -237,7 +237,7 @@ with_gallium_zink = gallium_drivers.contains('zink')
 with_gallium_d3d12 = gallium_drivers.contains('d3d12')
 
 with_gallium = gallium_drivers.length() != 0
-with_gallium_kmsro = with_gallium_v3d or with_gallium_vc4 or with_gallium_etnaviv or with_gallium_panfrost or with_gallium_lima or with_gallium_freedreno
+with_gallium_kmsro = with_gallium_v3d or with_gallium_vc4 or with_gallium_etnaviv or with_gallium_panfrost or with_gallium_lima or with_gallium_freedreno or with_gallium_iris
 
 if with_gallium and system_has_kms_drm
   _glx = get_option('glx')
diff --git a/src/gallium/auxiliary/target-helpers/drm_helper.h b/src/gallium/auxiliary/target-helpers/drm_helper.h
index 6bab07a40e7..412eb3f3e98 100644
--- a/src/gallium/auxiliary/target-helpers/drm_helper.h
+++ b/src/gallium/auxiliary/target-helpers/drm_helper.h
@@ -148,6 +148,8 @@ pipe_kmsro_create_screen(int fd, const struct pipe_screen_config *config)
 }
 #if defined(GALLIUM_VC4) || defined(GALLIUM_V3D)
 DRM_DRIVER_DESCRIPTOR(kmsro, v3d_driconf, ARRAY_SIZE(v3d_driconf))
+#elif defined(GALLIUM_IRIS)
+DRM_DRIVER_DESCRIPTOR(kmsro, iris_driconf, ARRAY_SIZE(iris_driconf))
 #else
 DRM_DRIVER_DESCRIPTOR(kmsro, NULL, 0)
 #endif
diff --git a/src/gallium/winsys/kmsro/drm/kmsro_drm_winsys.c b/src/gallium/winsys/kmsro/drm/kmsro_drm_winsys.c
index 790ed7d69e9..957cc1674e1 100644
--- a/src/gallium/winsys/kmsro/drm/kmsro_drm_winsys.c
+++ b/src/gallium/winsys/kmsro/drm/kmsro_drm_winsys.c
@@ -32,6 +32,7 @@
 #include "freedreno/drm/freedreno_drm_public.h"
 #include "panfrost/drm/panfrost_drm_public.h"
 #include "lima/drm/lima_drm_public.h"
+#include "iris/drm/iris_drm_public.h"
 #include "xf86drm.h"
 
 #include "pipe/p_screen.h"
@@ -59,6 +60,18 @@ struct pipe_screen *kmsro_drm_screen_create(int fd,
    ro->gpu_fd = -1;
    ro->destroy = kmsro_ro_destroy;
 
+#if defined(GALLIUM_IRIS)
+   ro->gpu_fd = drmOpenWithType("i915", NULL, DRM_NODE_RENDER);
+   if (ro->gpu_fd >= 0) {
+      ro->create_for_resource = renderonly_create_kms_dumb_buffer_for_resource,
+      screen = iris_screen_create_renderonly(ro, config);
+      if (!screen)
+         goto out_free;
+
+      return screen;
+   }
+#endif
+
 #if defined(GALLIUM_VC4)
    ro->gpu_fd = drmOpenWithType("vc4", NULL, DRM_NODE_RENDER);
    if (ro->gpu_fd >= 0) {
diff --git a/src/gallium/winsys/kmsro/drm/meson.build b/src/gallium/winsys/kmsro/drm/meson.build
index cec92b1fa15..c095160a92b 100644
--- a/src/gallium/winsys/kmsro/drm/meson.build
+++ b/src/gallium/winsys/kmsro/drm/meson.build
@@ -37,6 +37,9 @@ endif
 if with_gallium_panfrost
   kmsro_c_args += '-DGALLIUM_PANFROST'
 endif
+if with_gallium_iris
+  kmsro_c_args += '-DGALLIUM_IRIS'
+endif
 
 libkmsrowinsys = static_library(
   'kmsrowinsys',
-- 
2.17.1

